barplot(pca$sdev / sum(pca$sdev), col = c(rep("red", 6), rep("grey", 29)),
xlab = "PC", ylab = "% variants explained")
x
x = 2
x = 1
rotation <- -pca$rotation
grp3
group
barplot(rotation[, x], col = as.numeric(group), xaxt = "n")
nrow(meiotic)
colSums(meiotic)
pca.ge <- meiotic
pca.ge <- pca.ge - rowMeans(pca.ge[, grep("^8_", colnames(pca.ge))])
pca <- prcomp(pca.ge)
rotation <- pca$rotation
barplot(rotation[, x], col = as.numeric(group), xaxt = "n")
x = 2
barplot(rotation[, x], col = as.numeric(group), xaxt = "n")
x = 3
barplot(rotation[, x], col = as.numeric(group), xaxt = "n")
x = 4
barplot(rotation[, x], col = as.numeric(group), xaxt = "n")
pca.ge <- meiotic[input_select, ]
pca.ge <- pca.ge - rowMeans(pca.ge[, grep("^8_", colnames(pca.ge))])
pca <- prcomp(pca.ge)
rotation <- -pca$rotation
str(group)
barplot(rotation[, x], col = as.numeric(group), xaxt = "n")
x = 3
barplot(rotation[, x], col = as.numeric(group), xaxt = "n")
x = 2
barplot(rotation[, x], col = as.numeric(group), xaxt = "n")
pca.ge <- meiotic
pca.ge_select <- meiotic[input_select, ]
nrow(pca.ge)
pca.ge <- meiotic
pca.ge <- pca.ge - rowMeans(pca.ge[, grep("^8_", colnames(pca.ge))])
pca <- prcomp(pca.ge)
pca.ge_select <- meiotic[input_select, ]
pca.ge_select <- pca.ge_select - rowMeans(pca.ge_select[, grep("^8_", colnames(pca.ge_select))])
pca_select <- prcomp(pca.ge_select)
barplot(pca$sdev / sum(pca$sdev), col = c(rep("red", 6), rep("grey", 29)), xlab = "PC", ylab = "% variants explained")
barplot(pca_select$sdev / sum(pca_select$sdev), col = c(rep("red", 6), rep("grey", 29)), xlab = "PC", ylab = "% variants explained")
lapply(1:6, function(x) barplot(pca$rotation[, x], col = as.numeric(group), xaxt = "n"))
lapply(1:6, function(x) barplot(pca$rotation[, x], col = as.numeric(group), xaxt = "n", main = x))
lapply(1:6, function(x) barplot(pca_select$rotation[, x], col = as.numeric(group), xaxt = "n", main = x))
input_select <- input[setdiff(rownames(meiotic), input)]
pca.ge_select <- meiotic[input_select, ]
input_select <- input[setdiff(rownames(meiotic), input_select)]
input_select <- input[input %in% rownames(meiotic)]
input_select <- input[setdiff(rownames(meiotic), input_select)]
pca.ge_select <- meiotic[input_select, ]
input
rownames(meiotic)
input_select <- input[setdiff(rownames(meiotic), input)]
pca.ge_select <- meiotic[input_select, ]
input_select
input_select <- setdiff(rownames(meiotic), input)
pca.ge_select <- meiotic[input_select, ]
pca.ge_select <- pca.ge_select - rowMeans(pca.ge_select[, grep("^8_", colnames(pca.ge_select))])
pca_select <- prcomp(pca.ge_select)
lapply(1:6, function(x) barplot(pca_select$rotation[, x], col = as.numeric(group), xaxt = "n", main = x))
input_select <- intersect(rownames(meiotic), input)[1:100]
pca.ge_select <- meiotic[input_select, ]
pca.ge_select <- pca.ge_select - rowMeans(pca.ge_select[, grep("^8_", colnames(pca.ge_select))])
pca_select <- prcomp(pca.ge_select)
lapply(1:6, function(x) barplot(pca_select$rotation[, x], col = as.numeric(group), xaxt = "n", main = x))
colSums(meiotic)
473 / 450
47300 / 45000
select <- "IN"
gene_select <- as.data.frame(gene) %>% dplyr::select(contains(select))
gene_select <- gene_select[rowMax(as.matrix(gene_select)) > 20, ] # tpm
gene_select$W <- rowMeans(gene_select[grep("^W", names(gene_select))])
gene_select$M <- rowMeans(gene_select[grep("^M", names(gene_select))])
gene_select$log2fold <- with(gene_select, log2(M + 1) - log2(W + 1))
group <- factor(gsub("(M|W).*", "\\1", names(gene_select[1:6])), levels = c("W", "M"))
(design <- model.matrix(~ group))
v <- voom(gene_select[1:6], design, plot = T)
ebayesFit <- lmFit(v, design) %>% eBayes
gene_select$p.value <- ebayesFit$p.value[, "groupM"]
gene_select$q.value <- qvalue(gene_select$p.value)$qvalues
gene_select <- gene_select[gene_select$p.value < 0.05, ]
input = rownames(gene_select)
input
select
input_select <- intersect(rownames(meiotic), input)
pca.ge_select <- meiotic[input_select, ]
pca.ge_select <- pca.ge_select - rowMeans(pca.ge_select[, grep("^8_", colnames(pca.ge_select))])
pca_select <- prcomp(pca.ge_select)
lapply(1:6, function(x) barplot(pca_select$rotation[, x], col = as.numeric(mei_group), xaxt = "n", main = x))
select <- "PLM"
gene_select <- as.data.frame(gene) %>% dplyr::select(contains(select))
gene_select <- gene_select[rowMax(as.matrix(gene_select)) > 20, ] # tpm
gene_select$W <- rowMeans(gene_select[grep("^W", names(gene_select))])
gene_select$M <- rowMeans(gene_select[grep("^M", names(gene_select))])
gene_select$log2fold <- with(gene_select, log2(M + 1) - log2(W + 1))
group <- factor(gsub("(M|W).*", "\\1", names(gene_select[1:6])), levels = c("W", "M"))
(design <- model.matrix(~ group))
v <- voom(gene_select[1:6], design, plot = T)
ebayesFit <- lmFit(v, design) %>% eBayes
gene_select$p.value <- ebayesFit$p.value[, "groupM"]
gene_select$q.value <- qvalue(gene_select$p.value)$qvalues
gene_select <- gene_select[gene_select$p.value < 0.05, ]
gene_select <- gene_select[order(gene_select$q.value), ]
input = rownames(gene_select)
input_select <- intersect(rownames(meiotic), input)
pca.ge_select <- meiotic[input_select, ]
pca.ge_select <- pca.ge_select - rowMeans(pca.ge_select[, grep("^8_", colnames(pca.ge_select))])
pca_select <- prcomp(pca.ge_select)
lapply(1:6, function(x) barplot(pca_select$rotation[, x], col = as.numeric(mei_group), xaxt = "n", main = x))
input
select <- "NONP"
gene_select <- as.data.frame(gene) %>% dplyr::select(contains(select))
gene_select <- gene_select[rowMax(as.matrix(gene_select)) > 20, ] # tpm
gene_select$W <- rowMeans(gene_select[grep("^W", names(gene_select))])
gene_select$M <- rowMeans(gene_select[grep("^M", names(gene_select))])
gene_select$log2fold <- with(gene_select, log2(M + 1) - log2(W + 1))
group <- factor(gsub("(M|W).*", "\\1", names(gene_select[1:6])), levels = c("W", "M"))
(design <- model.matrix(~ group))
v <- voom(gene_select[1:6], design, plot = T)
ebayesFit <- lmFit(v, design) %>% eBayes
gene_select$p.value <- ebayesFit$p.value[, "groupM"]
gene_select$q.value <- qvalue(gene_select$p.value)$qvalues
gene_select <- gene_select[gene_select$p.value < 0.05 & gene_select$log2fold > 0.2, ]
gene_select <- gene_select[order(gene_select$q.value), ]
nrow(meiotic)
input = rownames(gene_input)
input = rownames(gene_nonp)
input
input_select <- intersect(rownames(meiotic), input)
pca.ge_select <- meiotic[input_select, ]
pca.ge_select <- pca.ge_select - rowMeans(pca.ge_select[, grep("^8_", colnames(pca.ge_select))])
pca_select <- prcomp(pca.ge_select)
str(pca_select)
pca_select$x[, 1]
plot(pca_select$x[, 1])
pca_gene_pc1 <- pca_select$x[, 1]
summary(pca_gene_pc1)
sd(pca_gene_pc1)
yy <- which(pca_gene_pc1 > sd(pca_gene_pc1))
yy
pca_gene_pc1["Hspa2"]
pca_gene_pc1["Hspa8"]
yy <- which(pca_gene_pc1 > sd(pca_gene_pc1)) %>% names
graph.dt <- meiotic_mean[yy, ]
head(graph.dt)
yy
yy2 <- which(pca_gene_pc1 < -sd(pca_gene_pc1)) %>% names
graph.dt <- meiotic_mean[yy2, ]
head(graph.dt)
names(graph.dt)
yy2
plot(1:6, rep(0, 6), type = "l", col = "blue", xlab = "", xaxt = "n", ylab = "", ylim = c(-0.1, 0.02))
lapply(1:nrow(graph.dt), function(i) lines(graph.dt[i, ], type = "l", col = "grey30"))
graph.dt[1, ]
lines(colMeans(graph.dt), type = "b", lwd = 3, col = "red")
axis(1, at=1:6, labels = paste0(c(2, 4, 5, 6, 16, 18), "m"))
head(graph.dt)
graph.dt <- graph.dt - graph.dt[, 1]
head(graph.dt)
plot(1:6, rep(0, 6), type = "l", col = "blue", xlab = "", xaxt = "n", ylab = "", ylim = c(-0.1, 0.5))
lapply(1:nrow(graph.dt), function(i) lines(graph.dt[i, ], type = "l", col = "grey30"))
plot(1:6, rep(0, 6), type = "l", col = "blue", xlab = "", xaxt = "n", ylab = "", ylim = c(-0.1, 5))
lapply(1:nrow(graph.dt), function(i) lines(graph.dt[i, ], type = "l", col = "grey30"))
lines(colMeans(graph.dt), type = "b", lwd = 3, col = "red")
axis(1, at=1:6, labels = paste0(c(2, 4, 5, 6, 16, 18), "d"))
head(graph.dt)
plot(1:6, rep(0, 6), type = "l", col = "blue", xlab = "", xaxt = "n", ylab = "", ylim = c(-1, 10))
lapply(1:nrow(graph.dt), function(i) lines(graph.dt[i, ], type = "l", col = "grey30"))
lines(colMeans(graph.dt), type = "b", lwd = 3, col = "red")
axis(1, at=1:6, labels = paste0(c(8, 10, 12, 14, 16, 18), "d"))
graph.dt <- meiotic_mean[yy1, ]
yy1 <- which(pca_gene_pc1 > sd(pca_gene_pc1)) %>% names
graph.dt <- meiotic_mean[yy1, ]
graph.dt <- graph.dt - graph.dt[, 1]
plot(1:6, rep(0, 6), type = "l", col = "blue", xlab = "", xaxt = "n", ylab = "", ylim = c(-1, 10))
lapply(1:nrow(graph.dt), function(i) lines(graph.dt[i, ], type = "l", col = "grey30"))
lines(colMeans(graph.dt), type = "b", lwd = 3, col = "red")
axis(1, at=1:6, labels = paste0(c(8, 10, 12, 14, 16, 18), "d"))
plot(1:6, rep(0, 6), type = "l", col = "blue", xlab = "", xaxt = "n", ylab = "", ylim = c(-2, 2))
lapply(1:nrow(graph.dt), function(i) lines(graph.dt[i, ], type = "l", col = "grey30"))
lines(colMeans(graph.dt), type = "b", lwd = 3, col = "red")
axis(1, at=1:6, labels = paste0(c(8, 10, 12, 14, 16, 18), "d"))
nrow(gene_select)
gene_select <- as.data.frame(gene) %>% dplyr::select(contains(select))
gene_select <- gene_select[rowMax(as.matrix(gene_select)) > 20, ] # tpm
gene_select$W <- rowMeans(gene_select[grep("^W", names(gene_select))])
gene_select$M <- rowMeans(gene_select[grep("^M", names(gene_select))])
gene_select$log2fold <- with(gene_select, log2(M + 1) - log2(W + 1))
group <- factor(gsub("(M|W).*", "\\1", names(gene_select[1:6])), levels = c("W", "M"))
(design <- model.matrix(~ group))
v <- voom(gene_select[1:6], design, plot = T)
ebayesFit <- lmFit(v, design) %>% eBayes
gene_select$p.value <- ebayesFit$p.value[, "groupM"]
gene_select$q.value <- qvalue(gene_select$p.value)$qvalues
gene_select <- gene_select[gene_select$p.value < 0.05 & gene_select$log2fold < -0.2, ]
head(gene_select)
boxplot(as.matrix(gene_select)["Actr10", 1:6] ~ group, col = 3:2)
names(dataList)
dataList$nonp_down <- gene_select
gene_select <- gene_select[order(gene_select$q.value), ]
dataList$nonp_down <- gene_select
names(dataList)
head(gene_select)
gene_select_gk <- myGK(rownames(gene_select))
sapply(gene_select_gk$GO, function(x) x$Term[1:10])
write.xlsx(gene_select, file = "new.xlsx", sheetName = "gene_select", append = T)
write.xlsx(gene_select_gk$GO$BP, file = "new.xlsx", sheetName = "gene_select_GO_BP", append = T)
write.xlsx(gene_select_gk$GO$MF, file = "new.xlsx", sheetName = "gene_select_GO_MF", append = T)
write.xlsx(gene_select_gk$GO$CC, file = "new.xlsx", sheetName = "gene_select_GO_CC", append = T)
write.xlsx(gene_select_gk$KEGG, file = "new.xlsx", sheetName = "gene_select_KEGG", append = T)
names(dataList)
nrow(dataList$nonp)
nrow(dataList$nonp_down)
input = rownames(dataList$nonp)
input
input_select <- intersect(rownames(meiotic), input)
graph.dt <- meiotic_mean[input_select, ]
graph.dt <- graph.dt - graph.dt[, 1]
plot(1:6, rep(0, 6), type = "l", col = "blue", xlab = "", xaxt = "n", ylab = "", ylim = c(-1, 10))
lapply(1:nrow(graph.dt), function(i) lines(graph.dt[i, ], type = "l", col = "grey30"))
lines(colMeans(graph.dt), type = "b", lwd = 3, col = "red")
plot(1:6, rep(0, 6), type = "l", col = "blue", xlab = "", xaxt = "n", ylab = "", ylim = c(-1, 8))
lapply(1:nrow(graph.dt), function(i) lines(graph.dt[i, ], type = "l", col = "grey30"))
lines(colMeans(graph.dt), type = "b", lwd = 3, col = "red")
axis(1, at=1:6, labels = paste0(c(8, 10, 12, 14, 16, 18), "d"))
plot(1:6, rep(0, 6), type = "l", col = "blue", xlab = "", xaxt = "n", ylab = "", ylim = c(-2, 9))
lapply(1:nrow(graph.dt), function(i) lines(graph.dt[i, ], type = "l", col = "grey30"))
lines(colMeans(graph.dt), type = "b", lwd = 3, col = "red")
axis(1, at=1:6, labels = paste0(c(8, 10, 12, 14, 16, 18), "d"))
input_select
pca.ge_select <- meiotic[input_select, ]
pca.ge_select <- pca.ge_select - rowMeans(pca.ge_select[, grep("^8_", colnames(pca.ge_select))])
pca_select <- prcomp(pca.ge_select)
par(mfrow = c(2, 3), mar = c(10, 4, 4, 2))
lapply(1:6, function(x) barplot(pca_select$rotation[, x], col = as.numeric(mei_group), xaxt = "n", main = x))
par(mfrow = c(2, 3), mar = c(5, 4, 4, 2))
lapply(1:6, function(x) barplot(pca_select$rotation[, x], col = as.numeric(mei_group), xaxt = "n", main = x))
svd <- svd(pca.ge_select)
z <- svd$d * t(svd$v)
group
plot(z[1, ], z[2, ], col = as.numeric(mei_group))
legend("topleft", levels(mei_group), col = seq_along(mei_group), pch=1)
mei_group
mei_group_fac <- factor(mei_group, levels = mei_stage)
mei_group_fac
as.numeric(mei_group_fac)
par(mfrow = c(2, 3), mar = c(5, 4, 4, 2))
lapply(1:6, function(x) barplot(pca_select$rotation[, x], col = as.numeric(mei_group_fac), xaxt = "n", main = x))
par(mfrow = c(2, 3), mar = c(2, 4, 4, 2))
lapply(1:6, function(x) barplot(pca_select$rotation[, x], col = as.numeric(mei_group_fac), xaxt = "n", main = x))
pdf("Pdf/pca1.pdf", width = 8, height = 5)
par(mfrow = c(2, 3), mar = c(2, 4, 4, 2))
lapply(1:6, function(x) barplot(pca_select$rotation[, x], col = as.numeric(mei_group_fac), xaxt = "n", main = x))
dev.off()
pca_gene_pc1 <- pca_select$x[, 1]
yy1 <- which(pca_gene_pc1 > sd(pca_gene_pc1)) %>% names
yy2 <- which(pca_gene_pc1 < -sd(pca_gene_pc1)) %>% names
graph.dt <- meiotic_mean[yy1, ]
pdf("Pdf/pca2.pdf", width = 8, height = 5)
plot(1:6, rep(0, 6), type = "l", col = "blue", xlab = "", xaxt = "n", ylab = "", ylim = c(-2, 9))
lapply(1:nrow(graph.dt), function(i) lines(graph.dt[i, ], type = "l", col = "grey30"))
lines(colMeans(graph.dt), type = "b", lwd = 3, col = "red")
axis(1, at=1:6, labels = paste0(c(8, 10, 12, 14, 16, 18), "d"))
dev.off()
graph.dt <- graph.dt - graph.dt[, 1]
pdf("Pdf/pca2.pdf", width = 8, height = 5)
plot(1:6, rep(0, 6), type = "l", col = "blue", xlab = "", xaxt = "n", ylab = "", ylim = c(-2, 9))
lapply(1:nrow(graph.dt), function(i) lines(graph.dt[i, ], type = "l", col = "grey30"))
lines(colMeans(graph.dt), type = "b", lwd = 3, col = "red")
axis(1, at=1:6, labels = paste0(c(8, 10, 12, 14, 16, 18), "d"))
dev.off()
pca_gene_pc1 <- pca_select$x[, 1]
yy2 <- which(pca_gene_pc1 < -sd(pca_gene_pc1)) %>% names
graph.dt <- meiotic_mean[yy2, ]
graph.dt <- graph.dt - graph.dt[, 1]
pdf("Pdf/pca2.pdf", width = 8, height = 5)
plot(1:6, rep(0, 6), type = "l", col = "blue", xlab = "", xaxt = "n", ylab = "", ylim = c(-2, 9))
lapply(1:nrow(graph.dt), function(i) lines(graph.dt[i, ], type = "l", col = "grey30"))
lines(colMeans(graph.dt), type = "b", lwd = 3, col = "red")
axis(1, at=1:6, labels = paste0(c(8, 10, 12, 14, 16, 18), "d"))
dev.off()
names(yy2)
yy2
yy2
yy2
yy2
graph.dt <- meiotic_mean[input_select, ]
graph.dt <- graph.dt - graph.dt[, 1]
pdf("Pdf/pca3.pdf", width = 8, height = 5)
plot(1:6, rep(0, 6), type = "l", col = "blue", xlab = "", xaxt = "n", ylab = "", ylim = c(-2, 9))
lapply(1:nrow(graph.dt), function(i) lines(graph.dt[i, ], type = "l", col = "grey30"))
lines(colMeans(graph.dt), type = "b", lwd = 3, col = "red")
axis(1, at=1:6, labels = paste0(c(8, 10, 12, 14, 16, 18), "d"))
dev.off()
pca_gene_pc2 <- pca_select$x[, 2]
yy1 <- which(pca_gene_pc1 > sd(pca_gene_pc1)) %>% names
yy2 <- which(pca_gene_pc1 < -sd(pca_gene_pc1)) %>% names
graph.dt <- meiotic_mean[yy1, ]
graph.dt <- graph.dt - graph.dt[, 1]
plot(1:6, rep(0, 6), type = "l", col = "blue", xlab = "", xaxt = "n", ylab = "", ylim = c(-2, 9))
lapply(1:nrow(graph.dt), function(i) lines(graph.dt[i, ], type = "l", col = "grey30"))
lines(colMeans(graph.dt), type = "b", lwd = 3, col = "red")
graph.dt <- meiotic_mean[yy2, ]
graph.dt <- graph.dt - graph.dt[, 1]
plot(1:6, rep(0, 6), type = "l", col = "blue", xlab = "", xaxt = "n", ylab = "", ylim = c(-2, 9))
lapply(1:nrow(graph.dt), function(i) lines(graph.dt[i, ], type = "l", col = "grey30"))
yy2
pca_gene_pc <- pca_select$x[, 2]
yy1 <- which(pca_gene_pc > sd(pca_gene_pc1)) %>% names
yy2 <- which(pca_gene_pc < -sd(pca_gene_pc1)) %>% names
yy1 <- which(pca_gene_pc > sd(pca_gene_pc)) %>% names
yy2 <- which(pca_gene_pc < -sd(pca_gene_pc)) %>% names
graph.dt <- meiotic_mean[yy1, ]
graph.dt <- graph.dt - graph.dt[, 1]
plot(1:6, rep(0, 6), type = "l", col = "blue", xlab = "", xaxt = "n", ylab = "", ylim = c(-2, 9))
lapply(1:nrow(graph.dt), function(i) lines(graph.dt[i, ], type = "l", col = "grey30"))
lines(colMeans(graph.dt), type = "b", lwd = 3, col = "red")
graph.dt <- meiotic_mean[yy2, ]
graph.dt <- graph.dt - graph.dt[, 1]
plot(1:6, rep(0, 6), type = "l", col = "blue", xlab = "", xaxt = "n", ylab = "", ylim = c(-2, 9))
lapply(1:nrow(graph.dt), function(i) lines(graph.dt[i, ], type = "l", col = "grey30"))
lines(colMeans(graph.dt), type = "b", lwd = 3, col = "red")
select <- "IN"
gene_select <- as.data.frame(gene) %>% dplyr::select(contains(select))
gene_select <- gene_select[rowMax(as.matrix(gene_select)) > 20, ] # tpm
gene_select$W <- rowMeans(gene_select[grep("^W", names(gene_select))])
gene_select$M <- rowMeans(gene_select[grep("^M", names(gene_select))])
gene_select$log2fold <- with(gene_select, log2(M + 1) - log2(W + 1))
group <- factor(gsub("(M|W).*", "\\1", names(gene_select[1:6])), levels = c("W", "M"))
(design <- model.matrix(~ group))
v <- voom(gene_select[1:6], design, plot = T)
ebayesFit <- lmFit(v, design) %>% eBayes
gene_select$p.value <- ebayesFit$p.value[, "groupM"]
gene_select$q.value <- qvalue(gene_select$p.value)$qvalues
gene_select <- gene_select[gene_select$p.value < 0.05, ]
gene_select <- gene_select[order(gene_select$q.value), ]
head(gene_select)
boxplot(as.matrix(gene_select)["Dynlt1b", 1:6] ~ group, col = 3:2)
gene_select_gk <- myGK(rownames(gene_select))
sapply(gene_select_gk$GO, function(x) x$Term[1:10])
dataList$in = gene_select
dataList$IN = gene_select
head(gene_select)
rownames(gene_select)
write.xlsx(gene_select, file = "new.xlsx", sheetName = "gene_select", append = T)
write.xlsx(gene_select_gk$GO$BP, file = "new.xlsx", sheetName = "gene_select_GO_BP", append = T)
write.xlsx(gene_select_gk$GO$MF, file = "new.xlsx", sheetName = "gene_select_GO_MF", append = T)
write.xlsx(gene_select_gk$GO$CC, file = "new.xlsx", sheetName = "gene_select_GO_CC", append = T)
write.xlsx(gene_select_gk$KEGG, file = "new.xlsx", sheetName = "gene_select_KEGG", append = T)
sapply(gene_select_gk$GO, function(x) x$Term[1:20])
file <- "pathway/IN_new.tsv" # Network iRegulon adding up and down together::IN genes
bg
ireg <- read.delim(file, comment.char = ";", stringsAsFactors = F)
factor <- lapply(1:nrow(ireg), function(x) unlist(strsplit(ireg$Transcription.factor[x], split = ",")))
target <- lapply(1:nrow(ireg), function(x) unlist(strsplit(ireg$Target.genes[x], split = ",")))
factor <- lapply(factor, function(x) x[x %in% bg])
target <- target[sapply(factor, length) > 0]
factor <- factor[sapply(factor, length) > 0]
edges <- lapply(1:length(factor), function(x) expand.grid(factor[[x]], target[[x]], stringsAsFactors = F))
edges <- do.call(rbind, edges)
edges <- edges[! duplicated(edges), ]
igraph.dt <- graph.data.frame(edges)  # IGRAPH
library(igraph)
igraph.dt <- graph.data.frame(edges)  # IGRAPH
igraph.dt$layout <- layout.sphere
V(igraph.dt)$color = rep("chartreuse3", length(V(igraph.dt)$name))
V(igraph.dt)$color[V(igraph.dt)$name %in% unlist(factor)] <- "gold"
V(igraph.dt)$size = (degree(igraph.dt) - 1) / (max(degree(igraph.dt)) - 1) * 10 + 2
V(igraph.dt)$label.cex = (degree(igraph.dt) - 1) / (max(degree(igraph.dt)) - 1) * 2 + 0.5
V(igraph.dt)$label.color = rep("dodgerblue3", length(V(igraph.dt)$name))
V(igraph.dt)$label.color[V(igraph.dt)$color == "gold"] = "firebrick1"
pdf(file = "IN_new.pdf", width = 12, height = 12)
plot.igraph(igraph.dt, vertex.frame.color = "white", edge.arrow.size = 0.3)
dev.off()
factor
edges
"Eif2" %in% eges[, 1]
"Eif2" %in% edges[, 1]
"Eif2" %in% edges[, 2]
head(edges)
"Eif2" %in% edges$Var1
"Elf2" %in% edges$Var1
"Elf2" %in% edges$Var2
names(dataList)
select <- "PLM"
gene_select <- as.data.frame(gene) %>% dplyr::select(contains(select))
gene_select <- gene_select[rowMax(as.matrix(gene_select)) > 20, ] # tpm
gene_select$W <- rowMeans(gene_select[grep("^W", names(gene_select))])
gene_select$M <- rowMeans(gene_select[grep("^M", names(gene_select))])
gene_select$log2fold <- with(gene_select, log2(M + 1) - log2(W + 1))
group <- factor(gsub("(M|W).*", "\\1", names(gene_select[1:6])), levels = c("W", "M"))
(design <- model.matrix(~ group))
v <- voom(gene_select[1:6], design, plot = T)
ebayesFit <- lmFit(v, design) %>% eBayes
gene_select$p.value <- ebayesFit$p.value[, "groupM"]
gene_select$q.value <- qvalue(gene_select$p.value)$qvalues
gene_select <- gene_select[gene_select$p.value < 0.05, ]
gene_select <- gene_select[order(gene_select$q.value), ]
head(gene_select)
"Hspa2" %in% rownames(gene_select)
"Hspa8" %in% rownames(gene_select)
gene_select_gk <- myGK(rownames(gene_select))
sapply(gene_select_gk$GO, function(x) x$Term[1:20]) # top terms
write.xlsx(gene_select, file = "new.xlsx", sheetName = "gene_select", append = T)
write.xlsx(gene_select_gk$GO$BP, file = "new.xlsx", sheetName = "gene_select_GO_BP", append = T)
write.xlsx(gene_select_gk$GO$MF, file = "new.xlsx", sheetName = "gene_select_GO_MF", append = T)
write.xlsx(gene_select_gk$GO$CC, file = "new.xlsx", sheetName = "gene_select_GO_CC", append = T)
write.xlsx(gene_select_gk$KEGG, file = "new.xlsx", sheetName = "gene_select_KEGG", append = T)
boxplot(as.matrix(gene_select)["Cep70", 1:6] ~ group, col = 3:2)
x = gene_select_gk$GO$BP
head(BP)
head(x)
x[grep("meiotic", x$Term), ]
x[grep("meiotic", x$Term), ]$Symbols
x[grep("meiotic", x$Term), c("Term", "Symbols")]
names(dataList)
dataList$poly = gene_select
nrow(dataList$poly)
save(dataList, file = "data/dataList.rdt")
input = rownames(dataList$IN)
input
gene_select_gk <- myGK(input)
sapply(gene_select_gk$GO, function(x) x$Term[1:20]) # top terms
sapply(gene_select_gk$GO, function(x) x$Term[1:20]) # top terms
sapply(gene_select_gk$GO, function(x) x$Term[1:20]) # top terms
sapply(gene_select_gk$GO, function(x) x$Term[1:20]) # top terms
sapply(gene_select_gk$GO, function(x) x$Term[1:20]) # top terms
sapply(gene_select_gk$GO[c(1, 3)], function(x) x$Term[1:20]) # top terms
input = rownames(dataList$nonp)
input
gene_select_gk <- myGK(input)
sapply(gene_select_gk$GO, function(x) x$Term[1:20]) # top terms
sapply(gene_select_gk$GO[c(1, 3)], function(x) x$Term[1:20]) # top terms
names(dataList)
input = rownames(dataList$nonp_down)
input
gene_select_gk <- myGK(input)
sapply(gene_select_gk$GO[c(1, 3)], function(x) x$Term[1:20]) # top terms
input
input = rownames(dataList$nonp)
input
sapply(cells, nrow)
sapply(cells, function(x) myhyper(input, x$gene_name))
lapply(cells, function(x) intersect(input, x$gene_name))
pbp_Eif4g3 <- read.delim("String/tabdelimited.Eif4g3.txt", stringsAsFactors = F)
pbp_Hspa2 <- read.delim("String/tabdelimited.Hspa2.txt", stringsAsFactors = F)
intersect(input, unique(c(as.matrix(pbp_Eif4g3[, 1:2]))))
intersect(input, unique(c(as.matrix(pbp_Hspa2[, 1:2])))) # 6
lapply(nonpoly, function(x) intersect(names(x), unique(c(as.matrix(pbp$Eif4g3[, 1:2])))))
boxplot(as.matrix(gene_select)["Stip1", 1:6] ~ group, col = 3:2)
lapply(x, function(x) boxplot(as.matrix(gene_select)[x, 1:6] ~ group, col = 3:2))
x
x = intersect(input, unique(c(as.matrix(pbp_Hspa2[, 1:2])))) # 6
lapply(x, function(x) boxplot(as.matrix(gene_select)[x, 1:6] ~ group, col = 3:2))
x
x %in% rownames(gene_select)
select <- "NONP"
gene_select <- as.data.frame(gene) %>% dplyr::select(contains(select))
gene_select <- gene_select[rowMax(as.matrix(gene_select)) > 20, ] # tpm
gene_select$W <- rowMeans(gene_select[grep("^W", names(gene_select))])
gene_select$M <- rowMeans(gene_select[grep("^M", names(gene_select))])
gene_select$log2fold <- with(gene_select, log2(M + 1) - log2(W + 1))
lapply(x, function(x) boxplot(as.matrix(gene_select)[x, 1:6] ~ group, col = 3:2))
pdf("Pdf/Hspa2_pbp.pdf", width = 8, height = 5)
par(mfrow = c(2, 3))
lapply(x, function(x) boxplot(as.matrix(gene_select)[x, 1:6] ~ group, col = 3:2))
dev.off()
pdf("Pdf/Hspa2_pbp.pdf", width = 8, height = 5)
par(mfrow = c(2, 3))
lapply(x, function(x) boxplot(as.matrix(gene_select)[x, 1:6] ~ group, col = 3:2), main = x)
dev.off()
pdf("Pdf/Hspa2_pbp.pdf", width = 8, height = 5)
par(mfrow = c(2, 3))
lapply(x, function(x) boxplot(as.matrix(gene_select)[x, 1:6] ~ group, col = 3:2, main = x))
dev.off()
rbp_Hspa2 <- read.delim("RBPmap/RBP_Hspa2.txt", header = F, stringsAsFactors = F)$V1
rbp_All <- read.delim("RBPmap/RBP_All.txt", header = F, stringsAsFactors = F)$V1
sapply(rbp_Hspa2, function(x) sum(rbp_All == x)) %>% sort
sort(sapply(rbp_Hspa2, function(x) sum(rbp_All == x)), decreasing = T)
input
c("Gm10282", "Gm10093", "Gm12942", "Gm13989", "Gm10182", "Gm3376") %in% input
x = setdiff(c("Gm10282", "Gm10093", "Gm12942", "Gm13989", "Gm10182", "Gm3376"), input)
x
lapply(1:6, function(x) barplot(pca_select$rotation[, x], col = as.numeric(mei_group_fac), xaxt = "n", main = x))
x
boxplot(as.matrix(gene_select)["Gm10093", 1:6] ~ group, col = 3:2)
boxplot(as.matrix(gene_select)["Gm3376", 1:6] ~ group, col = 3:2)
gene_select <- as.data.frame(gene) %>% dplyr::select(contains(select))
gene_select <- gene_select[rowMax(as.matrix(gene_select)) > 20, ] # tpm
gene_select$W <- rowMeans(gene_select[grep("^W", names(gene_select))])
gene_select$M <- rowMeans(gene_select[grep("^M", names(gene_select))])
gene_select$log2fold <- with(gene_select, log2(M + 1) - log2(W + 1))
boxplot(as.matrix(gene_select)["Gm10093", 1:6] ~ group, col = 3:2)
head(gene_select)
head(gene)
"Gm10093" %in% rownames(gene)
gene_select <- as.data.frame(gene) %>% dplyr::select(contains(select))
"Gm10093" %in% rownames(gene_select)
boxplot(as.matrix(gene_select)["Gm10093", 1:6] ~ group, col = 3:2)
boxplot(as.matrix(gene_select)["Gm3376", 1:6] ~ group, col = 3:2)
head(EP)
head(Spgonia)
intersec(Spgonia$gene_name, EP$gene_name)
intersection(Spgonia$gene_name, EP$gene_name)
intersection(as.character(Spgonia$gene_name), as.character(EP$gene_name))
intersect(as.character(Spgonia$gene_name), as.character(EP$gene_name))
intersect(as.character(Spgonia$gene_name), as.character(EP$gene_name))
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
